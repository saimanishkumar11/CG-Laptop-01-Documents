package automationScripts;

import java.util.List;
import java.util.concurrent.TimeUnit;

import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptException;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;
import org.testng.Assert;
import org.testng.annotations.AfterClass;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class AmazonFeaturesTests {

	ChromeDriver driver;

	@BeforeClass
	public void invokeBrowser() {

		System.setProperty("webdriver.chrome.driver", "C:\\Users\\Administrator\\Downloads\\chromedriver_win32 (1)\\chromedriver.exe");

		driver= new ChromeDriver();

		driver.manage().window().maximize();

		driver.manage().deleteAllCookies();

		driver.manage().timeouts().pageLoadTimeout(60, TimeUnit.SECONDS);

		driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);

		driver.get("https://amazon.com");


	}

	@Test(priority=0)
	public void verifyTitleOfThePage() {

		String expectedTitle="Amazon.com. Spend less. Smile more.";
		String actualTitle;

		actualTitle= driver.getTitle();

		Assert.assertEquals(actualTitle, expectedTitle);

	}

	@Test(priority=100)
	public void searchProduct() {

		String productItem= "Apple Watch";

		String category="Electronics";


		WebElement selDropdown = driver.findElement(By.id("searchDropdownBox"));

		Select selCategory = new Select(selDropdown) ;

		selCategory.selectByVisibleText(category);

		driver.findElement(By.id("twotabsearchtextbox")).sendKeys(productItem);

		driver.findElement(By.xpath("//input[@value='Go']")).click();
	}

	//Finding nth product from the product result

	@Test(priority=200)
	public void getNthProduct() {

		int productItemNumber =2;

		String xpathExpression = String.format("//div[@data-component-type='s-search-result'][%d]",productItemNumber );

		WebElement nthProduct = driver.findElement(By.xpath(xpathExpression));

		String nthProductResult = nthProduct.getText();

		System.out.println(nthProductResult);
	}

	//Finding all the products from product result

	@Test(priority=300, enabled=false)
	public void getAllProducts() {

		List<WebElement> allProducts = driver.findElements(By.xpath("//div[@data-component-type='s-search-result']"));

		String productResult;

		for(WebElement product :allProducts) {

			productResult= product.getText();

			System.out.println(productResult);

			System.out.println("----------------------------------------");

		}


	}

	//Finding all the products from product result along with scroll down using mouse

	@Test(priority=400)
	public void searchAllProductViaScrollDown() {

		List<WebElement> allProducts = driver.findElements(By.xpath("//div[@data-component-type='s-search-result']"));

		String productResult;

		Actions action= new Actions(driver);


		for(WebElement product :allProducts) {

			action.moveToElement(product).build().perform();

			productResult= product.getText();

			System.out.println(productResult);

			System.out.println("----------------------------------------");
		}
	}



	//Finding all the products from product result along with scroll down via Javascript

	@Test(priority=500)
	public void getAllProductsViaScrollDownUsingJs() {

		List<WebElement> allProducts = driver.findElements(By.xpath("//div[@data-component-type='s-search-result']"));

		String productResult;

		int xcordinate, ycordinate;

		for(WebElement product :allProducts) {

			xcordinate= product.getLocation().x;
			ycordinate = product.getLocation().y;

			scrollDown(xcordinate,ycordinate);

			productResult= product.getText();

			System.out.println(productResult);

			System.out.println("----------------------------------------");

		}

	}	

	private void scrollDown(int x, int y) {

		JavascriptExecutor jsEngine;
		jsEngine = (JavascriptExecutor) driver;

		String jsCommand;

		jsCommand = String.format("window.scrollBy(%d,%d)", x,y);

		jsEngine.executeScript(jsCommand);


	}

	@AfterClass
	public void closeBrowser() {

		driver.quit();

	}

}
